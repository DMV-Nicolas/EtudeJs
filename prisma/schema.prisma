// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model Usuario {
  id             Int            @id @default(autoincrement())
  nombre         String         @db.VarChar(100)
  correo         String         @unique @db.VarChar(100)
  contrasena     String         @db.Text
  fechaRegistro  DateTime       @default(now())
  inscripciones  Inscripcion[]

  @@map("usuarios")
}

model Curso {
  id             Int            @id @default(autoincrement())
  titulo         String         @db.VarChar(200)
  descripcion    String?        @db.Text
  dificultad     String?        @db.VarChar(50)
  fechaCreacion  DateTime       @default(now())
  inscripciones  Inscripcion[]

  @@map("cursos")
}

model Inscripcion {
  id               Int           @id @default(autoincrement())
  usuarioId        Int
  cursoId          Int
  fechaInscripcion DateTime      @default(now())
  usuario          Usuario       @relation(fields: [usuarioId], references: [id], onDelete: Cascade)
  curso            Curso         @relation(fields: [cursoId], references: [id], onDelete: Cascade)
  progreso         Progreso?

  @@unique([usuarioId, cursoId])
  @@map("inscripciones")
}

model Progreso {
  id                  Int       @id @default(autoincrement())
  inscripcionId       Int       @unique
  porcentajeAvance    Decimal   @default(0.00) @db.Decimal(5, 2)
  ultimaActualizacion DateTime  @default(now())
  inscripcion         Inscripcion @relation(fields: [inscripcionId], references: [id], onDelete: Cascade)

  @@map("progreso")
}
